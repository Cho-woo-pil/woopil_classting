# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: woopil-classting
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name


# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: "3"

package:
  include:
    - node_modules/**

provider:
  name: aws
  runtime: nodejs18.x
  region: ap-northeast-2

plugins:
  - serverless-auto-swagger
  - serverless-plugin-typescript
  - serverless-offline


custom:
  autoswagger:
    title: '클래스팅 API 테스트'
    basePath: '/dev'
    apiKeyHeaders: [ 'Authorization' ]
    schemes: [ "http" ]
    typefiles: [ './src/dto/user/signupDto.ts', './src/dto/user/loginDto.ts', './src/dto/admin/postSchoolDto.ts', './src/dto/admin/postNewsDto.ts', './src/dto/admin/patchNewsDto.ts', './src/dto/admin/deleteNewsDto.ts', './src/dto/student/subscribeDto.ts' ]


functions:
  signup:
    handler: src/user/signup.handler
    events:
      - http:
          path: /signup
          method: post
          cors: true
          summary: '회원가입 API'
          swaggerTags: [ 'User' ]
          bodyType: SignupDto


  login:
    handler: src/user/login.handler
    events:
      - http:
          path: /login
          method: post
          cors: true
          summary: '로그인 API'
          swaggerTags: [ 'User' ]
          bodyType: LoginDto


  postSchool:
    handler: src/admin/postSchool.handler
    events:
      - http:
          path: admin/school
          method: post
          cors: true
          summary: '학교 등록 API'
          swaggerTags: [ 'Admin' ]
          bodyType: PostSchoolDto

  postNews:
    handler: src/admin/postNews.handler
    events:
      - http:
          path: admin/news
          method: post
          cors: true
          summary: '뉴스 등록 API'
          swaggerTags: [ 'Admin' ]
          bodyType: PostNewsDto

  patchNews:
    handler: src/admin/patchNews.handler
    events:
      - http:
          path: admin/news
          method: patch
          cors: true
          summary: '뉴스 수정 API'
          swaggerTags: [ 'Admin' ]
          bodyType: PatchNewsDto

  deleteNews:
    handler: src/admin/deleteNews.handler
    events:
      - http:
          path: admin/news
          method: delete
          cors: true
          summary: '뉴스 삭제 API'
          swaggerTags: [ 'Admin' ]
          bodyType: DeleteNewsDto

  getSchool:
    handler: src/student/getAllSchool.handler
    events:
      - http:
          path: student/school/all
          method: get
          cors: true
          summary: '모든 학교 조회 API'
          swaggerTags: [ 'student' ]

  getSubscribeSchool:
    handler: src/student/getSubscribeSchool.handler
    events:
      - http:
          path: student/school/subscribe
          method: get
          cors: true
          summary: '구독한 학교 조회 API'
          swaggerTags: [ 'student' ]

  subscribe:
    handler: src/student/subscribe.handler
    events:
      - http:
          path: student/subscribe
          method: post
          cors: true
          summary: '학교 구독 API'
          swaggerTags: [ 'student' ]
          bodyType: SubscribeDto

  unSubscribe:
    handler: src/student/unSubscribe.handler
    events:
      - http:
          path: student/subscribe
          method: patch
          cors: true
          summary: '학교 구독 취소 API'
          swaggerTags: [ 'student' ]
          bodyType: SubscribeDto

  getAllNews:
    handler: src/student/getAllNews.handler
    events:
      - http:
          path: student/news/all
          method: get
          cors: true
          summary: '학생의 모든 뉴스 조회 API'
          swaggerTags: [ 'student' ]

  getSelectNews:
    handler: src/student/getSelectNews.handler
    events:
      - http:
          path: student/news/{schoolId}
          method: get
          cors: true
          summary: '학생의 구독한 특정학교 뉴스 조회 API'
          swaggerTags: [ 'student' ]
          request:
            parameters:
              paths:
                schoolId: true

